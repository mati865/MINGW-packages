From 5dca7a33d7fbfdd4425650f060876b91885c124c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Mateusz=20Miku=C5=82a?= <mati865@gmail.com>
Date: Thu, 23 Jul 2020 18:03:58 +0200
Subject: [PATCH] Add options to link LLVM with compiler-rt and libunwind

---
 CMakeLists.txt                          |  2 ++
 cmake/config-ix.cmake                   |  2 ++
 cmake/modules/HandleLLVMOptions.cmake   |  2 ++
 cmake/modules/HandleLLVMRTlib.cmake     | 34 +++++++++++++++++++++++++
 cmake/modules/HandleLLVMUnwindlib.cmake | 33 ++++++++++++++++++++++++
 5 files changed, 73 insertions(+)
 create mode 100644 cmake/modules/HandleLLVMRTlib.cmake
 create mode 100644 cmake/modules/HandleLLVMUnwindlib.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0e85afa8..ae21329f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -398,6 +398,8 @@ option(LLVM_STATIC_LINK_CXX_STDLIB "Statically link the standard library." OFF)
 option(LLVM_ENABLE_LLD "Use lld as C and C++ linker." OFF)
 option(LLVM_ENABLE_PEDANTIC "Compile with pedantic enabled." ON)
 option(LLVM_ENABLE_WERROR "Fail and stop if a warning is triggered." OFF)
+option(LLVM_ENABLE_COMPILER_RT "Use compiler-rt if available." OFF)
+option(LLVM_ENABLE_LIBUNWIND "Use libunwind if available." OFF)
 
 option(LLVM_ENABLE_DUMP "Enable dump functions even when assertions are disabled" OFF)
 
diff --git a/cmake/config-ix.cmake b/cmake/config-ix.cmake
index f758366b..e71585e6 100644
--- a/cmake/config-ix.cmake
+++ b/cmake/config-ix.cmake
@@ -11,7 +11,9 @@ include(CheckStructHasMember)
 include(CheckCCompilerFlag)
 
 include(CheckCompilerVersion)
+include(HandleLLVMRTlib)
 include(HandleLLVMStdlib)
+include(HandleLLVMUnwindlib)
 
 if( UNIX AND NOT (BEOS OR HAIKU) )
   # Used by check_symbol_exists:
diff --git a/cmake/modules/HandleLLVMOptions.cmake b/cmake/modules/HandleLLVMOptions.cmake
index be5cc358..2f3ce5be 100644
--- a/cmake/modules/HandleLLVMOptions.cmake
+++ b/cmake/modules/HandleLLVMOptions.cmake
@@ -7,7 +7,9 @@
 string(TOUPPER "${CMAKE_BUILD_TYPE}" uppercase_CMAKE_BUILD_TYPE)
 
 include(CheckCompilerVersion)
+include(HandleLLVMRTlib)
 include(HandleLLVMStdlib)
+include(HandleLLVMUnwindlib)
 include(CheckCCompilerFlag)
 include(CheckCXXCompilerFlag)
 include(CheckSymbolExists)
diff --git a/cmake/modules/HandleLLVMRTlib.cmake b/cmake/modules/HandleLLVMRTlib.cmake
new file mode 100644
index 00000000..d9e1c212
--- /dev/null
+++ b/cmake/modules/HandleLLVMRTlib.cmake
@@ -0,0 +1,34 @@
+# This CMake module is responsible for setting the compiler library to compiler-rt
+# if the user has requested it.
+
+include(DetermineGCCCompatible)
+
+if(NOT DEFINED LLVM_RTLIB_HANDLED)
+  set(LLVM_RTLIB_HANDLED ON)
+
+  function(append value)
+    foreach(variable ${ARGN})
+      set(${variable} "${${variable}} ${value}" PARENT_SCOPE)
+    endforeach(variable)
+  endfunction()
+
+  include(CheckCXXCompilerFlag)
+  include(CheckLinkerFlag)
+  set(LLVM_COMPILER_RT_USED 0)
+  if(LLVM_ENABLE_COMPILER_RT)
+    if(LLVM_COMPILER_IS_GCC_COMPATIBLE)
+      check_cxx_compiler_flag("-rtlib=compiler-rt" CXX_COMPILER_SUPPORTS_RTLIB)
+      check_linker_flag("-rtlib=compiler-rt" CXX_LINKER_SUPPORTS_RTLIB)
+      if(CXX_COMPILER_SUPPORTS_RTLIB AND CXX_LINKER_SUPPORTS_RTLIB)
+        append("-rtlib=compiler-rt"
+          CMAKE_CXX_FLAGS CMAKE_EXE_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS
+          CMAKE_MODULE_LINKER_FLAGS)
+        set(LLVM_LIBCXX_USED 1)
+      else()
+        message(WARNING "Can't specify compiler-rt with '-rtlib='")
+      endif()
+    else()
+      message(WARNING "Not sure how to specify compiler-rt for this compiler")
+    endif()
+  endif()
+endif()
diff --git a/cmake/modules/HandleLLVMUnwindlib.cmake b/cmake/modules/HandleLLVMUnwindlib.cmake
new file mode 100644
index 00000000..b72d3e6e
--- /dev/null
+++ b/cmake/modules/HandleLLVMUnwindlib.cmake
@@ -0,0 +1,33 @@
+# This CMake module is responsible for setting the unwind library to libunwind
+# if the user has requested it.
+
+include(DetermineGCCCompatible)
+
+if(NOT DEFINED LLVM_UNWINDLIB_HANDLED)
+  set(LLVM_UNWINDLIB_HANDLED ON)
+
+  function(append value)
+    foreach(variable ${ARGN})
+      set(${variable} "${${variable}} ${value}" PARENT_SCOPE)
+    endforeach(variable)
+  endfunction()
+
+  include(CheckCXXCompilerFlag)
+  include(CheckLinkerFlag)
+  set(LLVM_LIBUNWIND_USED 0)
+  if(LLVM_ENABLE_LIBUNWIND)
+    if(LLVM_COMPILER_IS_GCC_COMPATIBLE)
+      check_cxx_compiler_flag("-unwindlib=libunwind" CXX_COMPILER_SUPPORTS_UNWINDLIB)
+      check_linker_flag("-unwindlib=libunwind" CXX_LINKER_SUPPORTS_UNWINDLIB)
+      if(CXX_COMPILER_SUPPORTS_UNWINDLIB AND CXX_LINKER_SUPPORTS_UNWINDLIB)
+        append("-unwindlib=libunwind"
+          CMAKE_EXE_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS)
+        set(LLVM_LIBCXX_USED 1)
+      else()
+        message(WARNING "Can't specify libunwind with '-unwindlib='")
+      endif()
+    else()
+      message(WARNING "Not sure how to specify libunwind for this compiler")
+    endif()
+  endif()
+endif()
-- 
2.27.0.windows.1

